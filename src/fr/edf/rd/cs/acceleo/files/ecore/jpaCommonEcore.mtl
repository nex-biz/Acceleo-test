[comment encoding = UTF-8 /]
[module jpaCommonEcore('http://www.eclipse.org/emf/2002/Ecore')]


[query public isJpaEntityNeeded(aClass : EClassifier) : Boolean = 
	true or not ( aClass.oclAsType( EClass ).abstract )
/]

[query public isJpaMappedNeeded(aClass : EClassifier) : Boolean = 
	false and aClass.oclAsType( EClass ).abstract
/]


[** query public isJpaSuperNeeded(aClass : EClassifier, aPackage : EPackage) : Boolean = 
	aPackage.eAllContents()
	->excluding( aClass )
	->select(
		e : EClassifier | e.ancestors()->includes( aClass )
	)
	->size() > 0
*/]

[query public isPrimitive(aClassifier : EClassifier) : Boolean =
	aClassifier.eClass().name.equalsIgnoreCase('EDataType')
	or aClassifier.name.equalsIgnoreCase('__EBigDecimal')
	or aClassifier.name.equalsIgnoreCase('__EBoolean')
	or aClassifier.name.equalsIgnoreCase('__EBooleanObject')
	or aClassifier.name.equalsIgnoreCase('__EInt')
	or aClassifier.name.equalsIgnoreCase('__EIntegerObject')
	or aClassifier.name.equalsIgnoreCase('__EShortObject')
	or aClassifier.name.equalsIgnoreCase('__EString')
/]

[query public isPrimitive(aAttribute : EAttribute) : Boolean =
	aAttribute.eType.name.equalsIgnoreCase('EDataType')
	or aAttribute.eType.name.equalsIgnoreCase('__EBigDecimal')
	or aAttribute.eType.name.equalsIgnoreCase('__EBoolean')
	or aAttribute.eType.name.equalsIgnoreCase('__EBooleanObject')
	or aAttribute.eType.name.equalsIgnoreCase('__EInt')
	or aAttribute.eType.name.equalsIgnoreCase('__EIntegerObject')
	or aAttribute.eType.name.equalsIgnoreCase('__EShortObject')
	or aAttribute.eType.name.equalsIgnoreCase('__EString')
/]

[query public isPrimitive(aReference : EReference) : Boolean =
	aReference.eType.name.equalsIgnoreCase('EDataType')
	or aReference.eType.name.equalsIgnoreCase('__EBigDecimal')
	or aReference.eType.name.equalsIgnoreCase('__EBoolean')
	or aReference.eType.name.equalsIgnoreCase('__EBooleanObject')
	or aReference.eType.name.equalsIgnoreCase('__EInt')
	or aReference.eType.name.equalsIgnoreCase('__EIntegerObject')
	or aReference.eType.name.equalsIgnoreCase('__EShortObject')
	or aReference.eType.name.equalsIgnoreCase('__EString')
/]


[query public isEnum(aAttribute : EAttribute) : Boolean =
	aAttribute.eType.oclIsKindOf(EEnum)
/]

[query public isEnum(aClassifier : EClassifier) : Boolean =
	aClassifier.oclIsKindOf(EEnum)
/]

[query public isEnum(aReference : EReference) : Boolean =
	aReference.eType.oclIsKindOf(EEnum)
/]



[template public genJpaAnnotRepository(aClassName : EString)]
[if (Sequence{ 'abstractdataattribute','abstractdataobject','abstracteqfuncsubfunc',
'accesscontrol','accesspoint','address',
'agauthentication','agdatrgop','agdesc','agldref','aglnref','agoptfields','agsmvopts','agvirtual',
'anycontentfromothernamespace','anyln','association','authentication','baseelement','bitrate','bitratennmbpersec',
'cert','certificate','clientln','clientservices','commprot','communication',
'confdataset','confldname','conflns','conflogcontrol','confreportcontrol','confsg','confsigref',
'connectedap','control','controlblock','controlwithiedname','controlwithtriggeropt',
'dai','dataobjectdirectory','dataset','datasetdirectory','datatypetemplates','datatype','datetime','doi',
'durationinmillisec','durationinsec','dynassociation','dyndataset','eqfunction','eqsubfunction','equipment','equipmentcontainer','extref',
'fcda','filehandling','generalequipment','generalequipmentcontainer','getcbvalue','getdataobjectdefinition','getdatasetvalue','getdirectory',
'goose','goosedirectory','goosesecurity','gse','gsecontrol','gsedir','gsesettings','gsse','guid','header','history','hitem','idnaming','ied',
'iedname','inputs','issuername','kdc','ldevice','line','ln','ln0','lnodecontainer',
'log','logcontrol','logsettings','maxtime','mcsecurity','mintime','neutralpoint','optfields','p_physconn','p','paddr',
'physconn','powersystemresource','private','process','protns','protocol','readwrite','readprot','reportcontrol','reportsettings',
'rptenabled','sampledvaluecontrol','samplespersec','scl','sclobject','secpersamples','server','serverat','serviceconfreportcontrol',
'serviceforconfdataset','services','servicesettings','servicewithmax','servicewithmaxandmaxattributes',
'servicewithmaxandmodify','servicewithmaxnonzero','servicewithoptionalmax','serviceyesno','setdatasetvalue',
'settingcontrol','settinggroups','sgeedit','smprate','smv','smvopts','smvsc','smvsecurity','smvsettings',
'subject','subnetwork','supsubscription','text','timeractivatedcontrol','timesyncprot','trgops',
'unnaming','valuehandling','valuewithunit','rootobject','ecsproject'
}->includes(aClassName.toLowerCase()))]
public interface I[aClassName.toUpperFirst()/]JPAQueriesRepository {
[else]
@Repository
public interface I[aClassName.toUpperFirst()/]JPAQueriesRepository extends IRootObjectJPAQueriesRepository<[aClassName.toUpperFirst()/]> {
[/if]
[/template]

[template public log(msg : String, msg2 : String)]
[file ('stdout', true, 'Cp1252')]
LOG: [msg2/][msg/]
[/file]
[/template]

